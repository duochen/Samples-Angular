# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  # angular/app-i18n

  - task: Npm@1
    displayName: 'angular/app-i18n: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/app-i18n'

  # angular/app-settings

  - task: Npm@1
    displayName: 'angular/app-settings: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/app-settings'

  # angular/components/basic-components

  - task: Npm@1
    displayName: 'angular/components/basic-components: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/components/basic-components'

  # angular/components/component-host

  - task: Npm@1
    displayName: 'angular/components/component-host: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/components/component-host'

  # angular/components/component-providers

  - task: Npm@1
    displayName: 'angular/components/component-providers: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/components/component-providers'

  # angular/components/component-queries

  - task: Npm@1
    displayName: 'angular/components/component-queries: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/components/component-queries'

  # angular/components/dynamic-content

  - task: Npm@1
    displayName: 'angular/components/dynamic-content: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/components/dynamic-content'

  # angular/components/lifecycle

  - task: Npm@1
    displayName: 'angular/components/lifecycle: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/components/lifecycle'

  # angular/dependency-injection

  - task: Npm@1
    displayName: 'angular/dependency-injection: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/dependency-injection'

  # angular/directives/app-attach-directive

  - task: Npm@1
    displayName: 'angular/directives/app-attach-directive: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/directives/app-attach-directive'

  # angular/directives/app-upload-directive

  - task: Npm@1
    displayName: 'angular/directives/app-upload-directive: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/directives/app-upload-directive'

  # angular/directives/attribute-directives

  - task: Npm@1
    displayName: 'angular/directives/attribute-directives: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/directives/attribute-directives'

  # angular/directives/directive-example

  - task: Npm@1
    displayName: 'angular/directives/directive-example: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/directives/directive-example'

  # angular/directives/structural-directives

  - task: Npm@1
    displayName: 'angular/directives/structural-directives: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/directives/structural-directives'

  # angular/events

  - task: Npm@1
    displayName: 'angular/events: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/events'

  # angular/ng-docker

  - task: Npm@1
    displayName: 'angular/ng-docker: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/ng-docker'

  # angular/pipes/custom-pipes

  - task: Npm@1
    displayName: 'angular/pipes/custom-pipes: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/pipes/custom-pipes'

  # angular/pipes/pure-impure

  - task: Npm@1
    displayName: 'angular/pipes/pure-impure: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/pipes/pure-impure'

  # angular/pipes/standard-pipes

  - task: Npm@1
    displayName: 'angular/pipes/standard-pipes: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/pipes/standard-pipes'

  # angular/plugins

  - task: Npm@1
    displayName: 'angular/plugins: run unit tests'
    inputs:
      command: 'custom'
      customCommand: 'run test:ci'
      workingDir: './angular/plugins'
